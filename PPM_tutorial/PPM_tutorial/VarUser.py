''' Default PPM variables '''
#ScanRange Coordinate System (SRCS). Type=List ([X,Y,Z])
scanMin      = [  0.00,  0.00, 10.00]
scanMax      = [ 19.04, 14.80, 20.08]
scanStep     = [  0.08,  0.08,  0.08]
#GridN Coordinate System (gNCS). Type=List ([X,Y,Z])
gridN        = [  238,   160,   251]
gridA        = [ 19.04276,   0.00000,   0.00000]
gridB        = [  0.00000,  12.81134,   0.00000]
gridC        = [  0.00000,   0.00000,  20.08026]
#FFLJ Periodic Boundary Conditions. Type=List ([X,Y,Z])
#nPBC         = [0, 0, 0]                  #Recommended [3,3,0]
probeType    = 8                          # atom type of ProbeParticle (to choose L-J potential ),e.g. 8 for CO, 24 for Xe  
charge       = -0.05                      # effective charge of probe particle [e]
stiffness    = [0.16, 0.16, 20.00]        # [N/m] harmonic spring potential (x,y,R) components, x,y is bending stiffnes, R particle-tip bond-length stiffnes,
r0Probe      = [0.0, 0.0,  4.00]          # [AA] equilibirum position of probe particle (x,y,R) components, R is bond length, x,y introduce tip asymmetry
kCantilever  = 1800.0 
f0Cantilever = 23165.0
Amplitude    = 1
''' Jack Addition Variables '''
##### Adds zeros to the bottom of cube file electrostatics, relative to the initial file. This deals with the data that was not generated by DFT
CubeDataPad_Zpad_LJ   = 125     #Default=0
CubeDataPad_Zpad_EL   =  38     #Default=0
##### Set gridABCN automatically by reading the .cube file enter True/False or nothing
CubeDataExtract       = True
##### Set the scanMin, scanMax, and scanStep values to align with the gridN coordinate system from the .cube file. Takes into account the FF matrix truncation
AutoSet_scanMin     = [True, True, True]
AutoSet_scanMax     = [True, False, True]
AutoSet_scanStep    = [True, True, True]
##### RAM Reductions: Reduce RAM required by deleting some of the FF matrix. Set Z_range*(gridC/gridN[Z]) = {Top Of Surface}
FF_Truncate         = CubeDataPad_Zpad_LJ
##### Overwrite:  Overwrite specific FF matrices with zero's
Overwrite_FFEL      = [False, False, False]
Overwrite_FFLJ      = [False, False, False]
##### SplitStep2: What x range (in angstroms) to carry out each relaxed scan (original Step 2) over
XsubScanRange    = 1000
##### Calculate the minimum along the Z direction of OutFz.npy. Calculate potential and repeat.
FzAnaly_EminValMulti  = 2
FzAnalysis_Zbuffer    = 0.2
FzAnalysis_Sigma      = 2
FzAnalysis_USplit     = 100
##### Universal Plotting Parameters
AtomicSpecies    = [1, 6, 8]
Render2DGIFs     = True
##### FF2DPlot: Plot 2D images in the x, y, or z planes of any combination of the FF matrices
FF_MakePlots        =  False
FF_cmap             = 'gray'
FF_CustomCmap       = 'Gray_Caribbean/Gray_Caribbean_0.50.pymap'
FF_interpolation    = 'bicubic'
FF_Planes           = 'z'
FF_FFEL             = 'z'
FF_FFLJ             = 'z'
###### Plot 2D images of OutFz.npy matrix in the x, y, or z planes
Fz_MakePlots        =  True
Fz_cmap             = 'gray'
Fz_CustomCmap       = 'Gray_Caribbean/Gray_Caribbean_0.70.pymap'
Fz_interpolation    = 'bicubic'
Fz_Planes           = [False, False, True]
Fz_ZPlane_clims     = [None, None]
Fz_YPlane_clims     = [None, None]
Fz_XPlane_clims     = [None, None]
###### Lateral Force Images Angle: The angle defines the plotting axis, angle is relative to the PPM X axis
Theta               = 126
###### Plot 2D images of Fx1.npy matrix in the x, y, or z planes
Fx1_MakePlots       =  True
Fx1_cmap            = 'gray'
Fx1_CustomCmap      = 'Gray_Caribbean/Gray_Caribbean_0.70.pymap'
Fx1_interpolation   = 'bicubic'
Fx1_Planes          = [False, False, True]
Fx1_ZPlane_clims    = [None, None]
Fx1_YPlane_clims    = [None, None]
Fx1_XPlane_clims    = [None, None]
###### Plot 2D images of Fy1.npy matrix in the x, y, or z planes
Fy1_MakePlots       =  True
Fy1_cmap            = 'gray'
Fy1_CustomCmap      = 'Gray_Caribbean/Gray_Caribbean_0.70.pymap'
Fy1_interpolation   = 'bicubic'
Fy1_Planes          = [False, False, True]
Fy1_ZPlane_clims    = [None, None]
Fy1_YPlane_clims    = [None, None]
Fy1_XPlane_clims    = [None, None]
###### Plot 2D images of OutFz potential matrix in the x, y, or z planes
UFz_MakePlots       =  True
UFz_cmap            = 'Blues_r'
UFz_CustomCmap      = 'Gray_Caribbean/Gray_Caribbean_0.70.pymap'
UFz_interpolation   = 'bicubic'
UFz_Planes          = [False, False, True]
UFz_ZPlane_clims    = [None, None]
UFz_YPlane_clims    = [None, None]
UFz_XPlane_clims    = [None, None]
###### Plot 2D images of df matrix in the x, y, or z planes
df_MakePlots       =  False
df_cmap            = 'Blues_r'
df_CustomCmap      = 'Gray_Caribbean/Gray_Caribbean_0.70.pymap'
df_interpolation   = 'bicubic'
df_Planes          = [True, True, True]
df_ZPlane_clims    = [None, None]
df_YPlane_clims    = [None, None]
df_XPlane_clims    = [None, None]
##### Plots the 3D Cake Images and GIFs cmap=Custom for the custom one
Plot2DCake                  = True
Plot2DCake_Interpolation    = None
CakeParam_elev_step         = 30
CakeParam_azim_step         = 30
CakeParam_RenderGIFs        = True
CakeParam_CropGIFImages     = None
CakeParam_SmoothCoPlots     = False
CakeParam_EqualScales       = False
##OutFz Cake Images
PlotFzMinCoCake             = False
PlotFzMinValCake            = False
PlotFzMinHybridCakes        = False
PlotFzMin_CustomCmap        = 'Gray_Caribbean/Gray_Caribbean_0.50.pymap'
PlotFzMinCoCake_cmap        = 'Blues_r'
PlotFzMinValCake_cmap       = 'jet_r'
##UFz Cake Images
PlotUFzMinCoCake            = False
PlotUFzMinValCake           = False
PlotUFzMinHybridCakes       = False
PlotUFzMin_CustomCmap       = 'Gray_Gwyddion.net/Gray_Gwyddion.net_0.30.pymap'
PlotUFzMinCoCake_cmap       = 'Blues_r'
PlotUFzMinValCake_cmap      = 'jet_r'
##### Deletes unneeded files that were generated to save RAM True/False or blank
Clean                    = True
#### Additional parameters
AutoSet_InputFileName    = True
CPUs                     = 4
